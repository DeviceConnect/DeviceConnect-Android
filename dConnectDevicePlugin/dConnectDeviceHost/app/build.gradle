apply plugin: 'com.android.library'
// Create github.properties in root project folder file with
// gpr.usr=GITHUB_USER_ID
// gpr.key=PERSONAL_ACCESS_TOKEN
def githubPropertiesFile = rootProject.file("github.properties")
def githubProperties = new Properties()
if (githubPropertiesFile.exists()) {
    githubProperties.load(new FileInputStream(githubPropertiesFile))
}
def DEMO_ZIP_NAME = "demo.zip"

android {
    compileSdkVersion 29

    def getVersionName = { ->
        def version
        if (System.getProperty('os.name').toLowerCase().contains('windows')) {
            version = ["cmd", "/c", "git describe --tags --long"].execute().in.text.trim()
        } else {
            version = ["sh", "-c", "git describe --tags --long"].execute().in.text.trim()
        }
        version = version.empty ? "2.1.0" : version
        return "${version}"
    }

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionName getVersionName()

        buildConfigField "String", "PACKAGE_NAME", "\"org.deviceconnect.android.deviceplugin.host\""
        buildConfigField "String", "DEMO_DIR", "\"demo\""
        buildConfigField "String", "DEMO_ZIP", "\"" + DEMO_ZIP_NAME + "\""
        buildConfigField "long", "STATS_INTERVAL", "5000L"
    }

    signingConfigs {
        releaseConfig {
            storeFile=file(project.properties.storeFile)
            storePassword=project.properties.storePassword
            keyAlias=project.properties.keyAlias
            keyPassword=project.properties.keyPassword
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.releaseConfig
        }
    }

    productFlavors {
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
    repositories {
        maven {
            name = "DeviceConnect-Android"
            url = uri("https://maven.pkg.github.com/DeviceConnect/DeviceConnect-Android")

            credentials {
                username = System.getenv("GPR_USER") ?: githubProperties['gpr.usr']
                password = System.getenv("GPR_API_KEY") ?: githubProperties['gpr.key']
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation "androidx.preference:preference:1.1.0"
    implementation 'com.github.pedroSG94.rtmp-rtsp-stream-client-java:rtplibrary:1.9.1'
    implementation 'org.deviceconnect:dconnect-device-plugin-sdk:2.8.6'
    implementation 'org.deviceconnect:libmedia:1.1.1'
    implementation 'org.deviceconnect:libsrt:1.1.1'
    implementation 'org.deviceconnect:dconnect-demo-lib:1.0.1'
}

task zipDemo(type:Zip) {
    File demoDir = new File(projectDir, '../demo')
    File assetsDir = new File(projectDir, 'src/main/assets')

    from demoDir
    destinationDir assetsDir
    archiveName = DEMO_ZIP_NAME
}

tasks.preBuild.dependsOn(zipDemo)