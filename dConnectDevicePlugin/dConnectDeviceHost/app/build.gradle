apply plugin: 'com.android.library'

def DEMO_ZIP_NAME = "demo.zip"

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    def getVersionName = { ->
        def version
        if (System.getProperty('os.name').toLowerCase().contains('windows')) {
            version = ["cmd", "/c", "git describe --tags --long"].execute().in.text.trim()
        } else {
            version = ["sh", "-c", "git describe --tags --long"].execute().in.text.trim()
        }
        version = version.empty ? "2.1.0" : version
        return "${version}"
    }

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionName getVersionName()

        buildConfigField "String", "PACKAGE_NAME", "\"org.deviceconnect.android.deviceplugin.host\""
        buildConfigField "String", "DEMO_DIR", "\"demo\""
        buildConfigField "String", "DEMO_ZIP", "\"" + DEMO_ZIP_NAME + "\""
    }

    signingConfigs {
        releaseConfig {
            storeFile=file(project.properties.storeFile)
            storePassword=project.properties.storePassword
            keyAlias=project.properties.keyAlias
            keyPassword=project.properties.keyPassword
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.releaseConfig
        }
    }

    productFlavors {
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}

repositories {
    maven { url 'https://raw.githubusercontent.com/DeviceConnect/DeviceConnect-Android/master/dConnectSDK/dConnectSDKForAndroid/repository/' }
    maven { url 'https://raw.githubusercontent.com/DeviceConnect/DeviceConnect-Android/master/dConnectDevicePlugin/dConnectDevicePluginSDK/repository/' }
    maven { url 'file://' + rootDir + '/../../dConnectSDK/dConnectSDKForAndroid/repository/' }
    maven { url 'file://' + rootDir + '/../../dConnectDevicePlugin/dConnectDevicePluginSDK/repository/' }
}

dependencies {
    implementation fileTree(include: '*.jar', dir: 'libs')
    implementation('com.android.support:appcompat-v7:28.0.0') {
        exclude module: 'animated-vector-drawable'
        exclude module: 'support-media-compat'
    }
    implementation 'org.deviceconnect:dconnect-device-plugin-sdk:2.7.2'
    implementation project(':dconnect-demo-lib')
    implementation project(':libstreaming')
    implementation('com.serenegiant:common:2.12.5') {
        exclude module: 'support-v4'
        //exclude module: 'recyclerview-v7'
        exclude module: 'support-fragment'
        exclude module: 'support-core-ui'
        exclude module: 'appcompat-v7'
    }
}

task zipDemo(type:Zip) {
    File demoDir = new File(projectDir, '../demo')
    File assetsDir = new File(projectDir, 'src/main/assets')

    from demoDir
    destinationDir assetsDir
    archiveName = DEMO_ZIP_NAME
}

tasks.preBuild.dependsOn(zipDemo)